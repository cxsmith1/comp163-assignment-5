import math
#Challenge 1
print('=== Challenge 1: Collatz Conjecture ===')

n = int(input('Enter starting number: '))
steps = 0
sequence = []
sequence.append(n)

while n > 1: #While the number entered is greater than our end goal, we run the loop
    if n % 2 == 0: #if input is divisible by 2 and can get down to one, divide by two (next line)
        n = int(n) // 2  
        sequence.append(n)  #tracks the number in sequence
        steps += 1 #add one to step count each time the loop is run
    else:
        n_bloopie = (int(n) * 3) + 1 #Use a temporary variable
        sequence.append(n_bloopie) #prints the intermediate number 
        steps += 1 # Count the first step 
        n = n_bloopie // 2  # result of the division
        sequence.append(n) #add the result of the division
        steps += 1 #second step count for the division

print ("Sequence:", *sequence)
print (f'Steps: {steps}')

print('')

#Challenge 2
print('=== Challenge 2: Prime Number Checker ===')
primefr = True #set to true unless proven otherwise
n = int(input('Enter a number: '))
newt = n-1 #creates end of range by subtracting one
print(f'Testing divisors from 2 to {newt}...') 

for i in range(2, newt): #creates range to search if prime
    if n % i == 0: #if n is divisible its not prime
        print(f'{n} is not prime (divisible by {i})')
        primefr = False #makes primefr false
            
if primefr: 
    print(f'{n} is prime!') 

print('')

